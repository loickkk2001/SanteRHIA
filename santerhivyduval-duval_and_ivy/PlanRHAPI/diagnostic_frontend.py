#!/usr/bin/env python3
"""
Script de diagnostic pour le frontend Angular
"""

import requests
import json
import time

def check_frontend_status():
    """V√©rifie le statut du frontend Angular"""
    print("üîç Diagnostic du frontend Angular")
    print("=" * 50)
    
    # V√©rifier si le serveur Angular r√©pond
    try:
        print("1. V√©rification du serveur Angular (port 4200)...")
        response = requests.get("http://localhost:4200", timeout=5)
        if response.status_code == 200:
            print("   ‚úÖ Serveur Angular accessible")
            print(f"   üìÑ Contenu HTML re√ßu: {len(response.text)} caract√®res")
            
            # V√©rifier si le contenu contient l'app-root
            if "<app-root></app-root>" in response.text:
                print("   ‚úÖ Balise <app-root> trouv√©e")
            else:
                print("   ‚ùå Balise <app-root> manquante")
                
        else:
            print(f"   ‚ùå Serveur Angular non accessible - Status: {response.status_code}")
            return False
    except Exception as e:
        print(f"   ‚ùå Erreur de connexion au serveur Angular: {e}")
        return False
    
    # V√©rifier si le serveur backend r√©pond
    try:
        print("\n2. V√©rification du serveur backend (port 8000)...")
        response = requests.get("http://localhost:8000/", timeout=5)
        if response.status_code == 200:
            print("   ‚úÖ Serveur backend accessible")
        else:
            print(f"   ‚ùå Serveur backend non accessible - Status: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå Erreur de connexion au serveur backend: {e}")
    
    # V√©rifier les endpoints critiques
    endpoints_to_check = [
        "/login",
        "/user-info",
        "/availabilities",
        "/plannings"
    ]
    
    print("\n3. V√©rification des endpoints backend...")
    for endpoint in endpoints_to_check:
        try:
            response = requests.get(f"http://localhost:8000{endpoint}", timeout=3)
            if response.status_code in [200, 405, 422]:  # 405 = Method Not Allowed, 422 = Unprocessable Entity
                print(f"   ‚úÖ {endpoint} - Accessible")
            else:
                print(f"   ‚ö†Ô∏è  {endpoint} - Status: {response.status_code}")
        except Exception as e:
            print(f"   ‚ùå {endpoint} - Erreur: {e}")
    
    print("\n" + "=" * 50)
    print("üí° Solutions possibles pour un frontend vide:")
    print("1. Ouvrir les outils de d√©veloppement du navigateur (F12)")
    print("2. V√©rifier l'onglet Console pour les erreurs JavaScript")
    print("3. V√©rifier l'onglet Network pour les requ√™tes √©chou√©es")
    print("4. Vider le cache du navigateur (Ctrl+F5)")
    print("5. Red√©marrer le serveur Angular: npm start")
    print("6. V√©rifier que tous les modules PrimeNG sont correctement import√©s")
    
    return True

if __name__ == "__main__":
    check_frontend_status()







